@implements IDisposable
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthStateProvider


﻿<!-- Navbar -->
<div class="top-row navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">eStore</a>
    </div>
</div>

<div class="nav-scrollable" id="sidebar">
    <nav class="flex-column">
        @if (isAdmin)
        {
            <!-- Admin Menu -->
            <div class="nav-item px-3">
                <a class="nav-link" href="/"> <i class="bi bi-house-door-fill"></i> Home </a>
            </div>
            <div class="nav-item px-3">
                <a class="nav-link" href="/members"> <i class="bi bi-people-fill"></i> Members </a>
            </div>
            <div class="nav-item px-3">
                <a class="nav-link" href="/orders"> <i class="bi bi-cart-fill"></i> Orders </a>
            </div>
            <div class="nav-item px-3">
                <a class="nav-link" href="/products"> <i class="bi bi-box-seam"></i> Products </a>
            </div>
            <div class="nav-item px-3">
                <a class="nav-link" href="/categories"> <i class="bi bi-tags-fill"></i> Categories </a>
            </div>
        }

        else if (isCustomer)
        {
            <!-- Customer Menu -->
            <div class="nav-item px-3">
                <a class="nav-link" href="/"> <i class="bi bi-house-door-fill"></i> Home </a>
            </div>
            <div class="nav-item px-3">
                <a class="nav-link" href="/shop"> <i class="bi bi-bag-fill"></i> Shop </a>
            </div>
            <div class="nav-item px-3">
                <a class="nav-link" href="/cart"> <i class="bi bi-cart-check-fill"></i> Cart </a>
            </div>
            <div class="nav-item px-3">
                <a class="nav-link" href="/editprofile"> <i class="bi bi-person-circle"></i> Profile </a>
            </div>
        }

        else
        {
            <!-- Default Menu (User chưa login) -->
            <div class="nav-item px-3">
                <a class="nav-link" href="/login"> <i class="bi bi-box-arrow-in-right"></i> Login </a>
            </div>
            <div class="nav-item px-3">
                <a class="nav-link" href="/register"> <i class="bi bi-person-plus-fill"></i> Register </a>
            </div>
            <div class="nav-item px-3">
                <a class="nav-link" href="/about"> <i class="bi bi-info-circle-fill"></i> About </a>
            </div>
        }

    </nav>
</div>

@code {
    private bool isAdmin = false;
    private bool isCustomer = false;

    protected override async Task OnInitializedAsync()
    {
        AuthStateProvider.AuthenticationStateChanged += UpdateUserRole;
         UpdateUserRole();
    }

    // Change return type from Task to void
    private async void UpdateUserRole(Task<AuthenticationState>? task = null)
    {
        try
        {
            var authState = task != null ? await task : await AuthStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            isAdmin = user.IsInRole("Admin");
            isCustomer = user.IsInRole("Customer");
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error updating user role: {ex.Message}");
        }
    }

    public void Dispose()
    {
        AuthStateProvider.AuthenticationStateChanged -= UpdateUserRole;
    }
}